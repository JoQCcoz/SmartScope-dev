version: "2"
services: 
  smartscope:
    image: smartscope:0.6
    build:
      context: .
    restart: always
    volumes: #Volumes are spelled /path/on/host/:/path/in/container/
      - /auto_screening/:/mnt/data/ #Where the data is to be saved (required)
      - /auto_screening/log_test/:/opt/logs/ #Where the log files are to be saved (required)
      - /home/bouvettej2/Smartscope-beta/:/opt/smartscope/ #Path to the Repo. It's technically already in the container. Useful for development/troubleshooting
      - /ddn/cryoemCore/data/auto_screening/:/mnt/longterm/ #Use if USE_LONGTERMSTORAGE: True
      - /auto_screening/tmp/scope/smartscope_testfiles/:/mnt/testfiles/ #Use to mount test files directory for testing
      ### Microscopes ### One mount per microscope to /mnt/{micoscope_name}/
      - /mnt/gatan_Raid_X:/mnt/arctica/
      - /mnt/krios_Rais_X:/mnt/krios/
    environment:
      ALLOWED_HOSTS: localhost,lxd-02012614 #List of allowed hostnames for connection
      DJANGO_SETTINGS_MODULE: Smartscope.settings.server_docker #Shouldn't need to be changed, here for testing
      USE_STORAGE: True #Usually set to True, can be turned off for a server that would only read from long-term storage. Need to have a volume mounted to /mnt/data/
      USE_LONGTERMSTORAGE: True #True if the data gets transfered and read from another storage areas. Shoud have volume mounted to /mnt/longterm 
      USE_MICROSCOPE: True #Set to false to disable creating and starting workflow. Useful for a 'viewer' only server
      DEFAULT_UMASK: '003' #default=003. Will set 774 permission on all the files created by smartscope
      LOGLEVEL: DEBUG #Log level, choices are INFO, WARNING, CRITICAL, DEBUG. default:INFO
      DEBUG: True #set to True to get a django debug page whenever a page isn't found or an error occurs while loading assets to the web browser.
      SECRET_KEY: 'd41d8cd98f00b204e9800998e' #Make sure this is unique! Generate a new one with: $RANDOM | md5sum | head -c 25
      ###SerialEM variables###
      SEM_PYTHON: False #Set to False skip connection to serialEM
      NO_TEM_TESTMODE: True #Set to True to test the workflow on sample images. SEM_PYTHON needs to also be False to work.
      TEST_FILES: /mnt/testfiles/ #Shouldn't need to be changed.Along the SEM_PYTHON: False and NO_TEM_TESTMODE: True. This is the location of the test images.
      ####Database###
      MYSQL_HOST: db #Shouldn't need to be changed
      MYSQL_PORT: 3306 #Shouldn't need to be changed
      MYSQL_USERNAME: root #Needs to match with the value set in the db service
      MYSQL_ROOT_PASSWORD: pass #Needs to match with the value set in the db service
      DB_NAME: smartscope #Needs to match with the value set in the db service
      DB_PATH: #Not currently used since it connects to db via socket.
      ####Cache###
      REDIS_HOST: cache #Shouldn't need to be changed
      REDIS_PORT: 6379 #Shouldn't need to be changed
      ###AWS###
      USE_AWS: False # If the data is to be moved and read to/from S3 bucket. Complete all the AWS fields for connection
      AWS_STORAGE_BUCKET_NAME:
      AWS_DATA_PREFIX: data
      AWS_S3_REGION_NAME: us-east-1
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
    depends_on:
      - db
      - cache
      - nginx
    networks:
      - smartscopenet
    command:  gunicorn -c /opt/smartscope/config/singularity/gunicorn_singularity.conf.py
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  db:
    image: mariadb:10.5
    restart: always
    ports:
      - 6603:3306
    volumes:
      - /auto_screening/tmp/test_db2/:/var/lib/mysql
    environment:
      MYSQL_DATABASE: smartscope #Name of the database to use. Will be created automatically if doesn't exist
      MYSQL_USER: root #Username to use for database connection. Currently needs to be root (needs to be changed)
      MYSQL_PASSWORD: #Not used
      MYSQL_ROOT_PASSWORD: pass #Set a password for the root user
    networks:
      - smartscopenet
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - smartscopenet
  nginx:
    image: nginx
    ports:
      - 8080:80
    volumes:
      - ./config/singularity/nginx-test/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - smartscopenet
  

networks:
  smartscopenet: {}